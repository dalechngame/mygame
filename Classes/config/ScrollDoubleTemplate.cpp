#include "ScrollDoubleTemplate.h"

void ScrollDoubleTemplate::InitData(void)
{
	isInstance = lastLoadLanguage != ConfigLanguageSetting::instance().getCurLanguageName() ? false : isInstance;
	
	if(isInstance) 
		return;

	Release();
	lastLoadLanguage = ConfigLanguageSetting::instance().getCurLanguageName();
	isInstance		 = true;
	ScrollDoubleTemplate* temp;

	temp = new ScrollDoubleTemplate();
temp->Key = "P012_left_001";
temp->itemKey = "P012_ball_";
temp->clickAble = true;
temp->count = 12;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P012_left_002";
temp->itemKey = "P012_decor_";
temp->clickAble = true;
temp->count = 13;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P012_left_003";
temp->itemKey = "P012_under_";
temp->clickAble = true;
temp->count = 4;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_left_001";
temp->itemKey = "P002_circle_";
temp->clickAble = true;
temp->count = 8;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_left_002";
temp->itemKey = "P002_color_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_leftcolor_001";
temp->itemKey = "P002_color1_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_leftcolor_002";
temp->itemKey = "P002_color2_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_leftcolor_003";
temp->itemKey = "P002_color3_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_leftcolor_004";
temp->itemKey = "P002_color4_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_leftcolor_005";
temp->itemKey = "P002_color5_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_leftcolor_006";
temp->itemKey = "P002_color6_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_leftcolor_007";
temp->itemKey = "P002_color7_";
temp->clickAble = true;
temp->count = 3;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_left_003";
temp->itemKey = "P002_drop_";
temp->clickAble = true;
temp->count = 10;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P002_left_004";
temp->itemKey = "P002_deco_";
temp->clickAble = true;
temp->count = 10;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P005_left_001";
temp->itemKey = "P005_sugar_";
temp->clickAble = true;
temp->count = 7;
temp->saveType = 6;
temp->saveIconScale = 0.3f;
temp->saveFileScale = 0.5f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P005_left_002";
temp->itemKey = "P005_catcher_";
temp->clickAble = true;
temp->count = 7;
temp->saveType = 1;
temp->saveIconScale = 0.3f;
temp->saveFileScale = 0.5f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P005_left_003";
temp->itemKey = "P005_people_";
temp->clickAble = true;
temp->count = 7;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P007_left_001";
temp->itemKey = "P007_eyebrow_";
temp->clickAble = true;
temp->count = 6;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P007_left_002";
temp->itemKey = "P007_eyeshadow_";
temp->clickAble = true;
temp->count = 6;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P007_left_003";
temp->itemKey = "P007_cheek_";
temp->clickAble = true;
temp->count = 6;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P007_left_004";
temp->itemKey = "P007_mouth_";
temp->clickAble = true;
temp->count = 8;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P007_left_005";
temp->itemKey = "P007_paster_";
temp->clickAble = true;
temp->count = 11;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P008_left_001";
temp->itemKey = "P008_color_";
temp->clickAble = true;
temp->count = 10;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P008_left_002";
temp->itemKey = "P008_patter_";
temp->clickAble = true;
temp->count = 14;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P008_left_003";
temp->itemKey = "P008_decor_";
temp->clickAble = true;
temp->count = 16;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P0010_left_001";
temp->itemKey = "P010_basic_";
temp->clickAble = true;
temp->count = 6;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P0010_left_002";
temp->itemKey = "P010_lacework_";
temp->clickAble = true;
temp->count = 8;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P0010_left_003";
temp->itemKey = "P010_postmark_";
temp->clickAble = true;
temp->count = 6;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P0010_left_004";
temp->itemKey = "P010_littledeco_";
temp->clickAble = true;
temp->count = 13;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));
temp = new ScrollDoubleTemplate();
temp->Key = "P0010_left_005";
temp->itemKey = "P010_Signature_";
temp->clickAble = true;
temp->count = 0;
temp->saveType = -1;
temp->saveIconScale = 1.0f;
temp->saveFileScale = 1.0f;
mapdata.insert(std::make_pair(temp->Key,temp));

}